import "../../styles/globals.css";

import { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { Product } from "@/app/types/Product";

interface ProductImageProps {
  src: string;
  alt: string;
}

const ProductImage: React.FC<ProductImageProps> = ({ src, alt }) => (
    <div className="w-full md:w-1/2 lg:w-2/5 p-4">
      <div className="relative aspect-square rounded-2xl overflow-hidden shadow-2xl bg-gradient-to-br from-white to-gray-50 hover:shadow-3xl transition-all duration-500 group">
        <div className="absolute inset-0 bg-gradient-to-br from-amber-50/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
        <Image
            src={src || "/placeholder-image.png"}
            alt={alt}
            fill
            sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 40vw"
            style={{ objectFit: "contain" }}
            priority
            className="p-8 transform group-hover:scale-105 transition-transform duration-500"
        />
        <div className="absolute inset-0 ring-1 ring-black/5 rounded-2xl"></div>
      </div>
    </div>
);

interface ProductInfoProps {
  name: string;
  description: string;
  price: number;
  productId: string | number;
  reviews?: {
    comment: string;
    rating: number;
    client: string;
  }[] | null;
  averageRating?: number | null;
}

const ProductInfo: React.FC<ProductInfoProps> = ({
                                                   name,
                                                   description,
                                                   price,
                                                   productId,
                                                   reviews,
                                                   averageRating,
                                                 }) => (
    <div className="md:w-1/2 lg:w-3/5 p-4 flex flex-col justify-center">
      <div className="space-y-6">
        <h1 className="text-4xl md:text-5xl font-bold leading-tight bg-gradient-to-r from-gray-800 to-gray-600 bg-clip-text text-transparent">
          {name}
        </h1>

        <div className="flex items-center space-x-6 pb-4">
          {reviews && reviews.length > 0 && averageRating ? (
              <div className="flex items-center space-x-2">
                <div className="flex -space-x-1">
                  {[...Array(5)].map((_, i) => (
                      <svg
                          key={i}
                          className={`w-5 h-5 ${
                              i < Math.round(averageRating)
                                  ? "text-yellow-400"
                                  : "text-gray-300"
                          }`}
                          fill="currentColor"
                          viewBox="0 0 20 20"
                      >
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                      </svg>
                  ))}
                </div>
                <span className="text-sm text-gray-600">
              {averageRating.toFixed(1)} ({reviews.length}{" "}
                  {reviews.length === 1 ? "–≤—ñ–¥–≥—É–∫" : "–≤—ñ–¥–≥—É–∫—ñ–≤"})
            </span>
              </div>
          ) : (
              <div className="text-sm text-gray-500">–í—ñ–¥–≥—É–∫—ñ–≤ —â–µ –Ω–µ–º–∞—î</div>
          )}

          <div className="flex items-center space-x-2 text-sm text-gray-600">
            <svg
                className="w-4 h-4 text-green-500"
                fill="currentColor"
                viewBox="0 0 20 20"
            >
              <path
                  fillRule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                  clipRule="evenodd"
              />
            </svg>
            <span>–í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ</span>
          </div>
        </div>
        {reviews && reviews.length > 0 && (
            <ProductReviews reviews={reviews} />
        )}

        <div className="prose prose-lg text-gray-700 leading-relaxed">
          <p className="text-lg whitespace-pre-wrap">{description}</p>
        </div>

        <div className="flex items-baseline space-x-2">
        <span className="text-4xl font-bold text-amber-700">
          ${price.toFixed(2)}
        </span>
        </div>

        <div className="pt-4">
          <Link
              href={`/customizer?productId=${productId}`}
              passHref
              legacyBehavior
          >
            <a className="group relative inline-flex items-center justify-center w-full md:w-auto px-8 py-4 text-lg font-semibold text-white bg-gradient-to-r from-amber-600 to-orange-600 rounded-2xl shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 overflow-hidden">
              <div className="absolute inset-0 bg-gradient-to-r from-orange-600 to-red-600 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              <span className="relative flex items-center space-x-2">
              <span>–ö–∞—Å—Ç–æ–º—ñ–∑—É–≤–∞—Ç–∏ –∑–∞—Ä–∞–∑</span>
              <svg
                  className="w-5 h-5 transform group-hover:translate-x-1 transition-transform duration-300"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
              >
                <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M13 7l5 5m0 0l-5 5m5-5H6"
                />
              </svg>
            </span>
            </a>
          </Link>
        </div>
      </div>
    </div>
);

interface ProductSpecsProps {
  product: Product;
}

const ProductSpecs: React.FC<ProductSpecsProps> = ({ product }) => {
  const specs = [
    {
      label: "–î–æ–≤–∂–∏–Ω–∞ –ª–µ–∑–∞",
      value: product.bladeLength,
      unit: "—Å–º",
      icon: "üìè",
    },
    { label: "–®–∏—Ä–∏–Ω–∞ –ª–µ–∑–∞", value: product.bladeWidth, unit: "–º–º", icon: "üìê" },
    { label: "–í–∞–≥–∞ –ª–µ–∑–∞", value: product.bladeWeight, unit: "–≥", icon: "‚öñÔ∏è" },
    {
      label: "–ó–∞–≥–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞",
      value: product.totalLength,
      unit: "—Å–º",
      icon: "üìè",
    },
    {
      label: "–ö—É—Ç –∑–∞—Ç–æ—á–∫–∏",
      value: product.sharpnessAngle,
      unit: "¬∞",
      icon: "üî™",
    },
    {
      label: "–¢–≤–µ—Ä–¥—ñ—Å—Ç—å",
      value: product.hardnessRockwell,
      unit: "HRC",
      icon: "üíé",
    },
    { label: "–ö–æ–ª—ñ—Ä –ø—ñ—Ö–æ–≤", value: product.sheathColor, icon: "üé®" },
    { label: "–ü–æ–∫—Ä–∏—Ç—Ç—è –ª–µ–∑–∞", value: product.bladeCoatingColor, icon: "‚ú®" },
    { label: "–ö–æ–ª—ñ—Ä —Ä—É–∫—ñ–≤'—è", value: product.handleColor, icon: "üéØ" },
    {
      label: "–ì—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è",
      value: product.engravingNames?.join(", "),
      icon: "‚úçÔ∏è",
    },
    { label: "–¢–∏–ø –ø–æ–∫—Ä–∏—Ç—Ç—è", value: product.bladeCoatingType, icon: "üõ°Ô∏è" },
  ];

  const availableSpecs = specs.filter(
      (spec) =>
          spec.value !== undefined && spec.value !== null && spec.value !== ""
  );

  if (availableSpecs.length === 0) return null;

  return (
      <div className="w-full mt-12">
        <div className="bg-white/80 backdrop-blur-sm rounded-3xl shadow-xl border border-gray-100 overflow-hidden">
          <div className="bg-gradient-to-r from-amber-50 to-orange-50 px-8 py-6 border-b border-gray-100">
            <h2 className="text-3xl font-bold text-gray-800 flex items-center space-x-3">
              <span className="text-2xl">üìã</span>
              <span>–î–µ—Ç–∞–ª—å–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</span>
            </h2>
            <p className="text-gray-600 mt-2">
              –¢–µ—Ö–Ω—ñ—á–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç–∞ –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ –ø—Ä–æ–¥—É–∫—Ç—É
            </p>
          </div>

          <div className="p-8">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {availableSpecs.map((spec, index) => (
                  <div
                      key={index}
                      className="group relative bg-gradient-to-br from-gray-50 to-white p-6 rounded-2xl border border-gray-100 hover:border-amber-200 hover:shadow-lg transition-all duration-300 hover:-translate-y-1"
                  >
                    <div className="flex items-start space-x-4">
                      <div className="flex-shrink-0">
                    <span className="text-2xl filter grayscale group-hover:grayscale-0 transition-all duration-300">
                      {spec.icon}
                    </span>
                      </div>
                      <div className="flex-1 min-w-0">
                        <h3 className="text-sm font-medium text-gray-600 mb-1">
                          {spec.label}
                        </h3>
                        <p className="text-xl font-bold text-amber-700 truncate">
                          {spec.value}
                          {spec.unit || ""}
                        </p>
                      </div>
                    </div>
                    <div className="absolute inset-0 bg-gradient-to-br from-amber-100/20 to-orange-100/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-2xl"></div>
                  </div>
              ))}
            </div>
          </div>
        </div>
      </div>
  );
};

interface ProductReviewsProps {
  reviews: {
    client: string;
    rating: number;
    comment: string;
  }[];
}

const ProductReviews: React.FC<ProductReviewsProps> = ({ reviews }) => {
  if (!reviews || reviews.length === 0) {
    return null;
  }

  return (
      <div className="pt-4 border-t border-gray-200">
        <div className="flex overflow-x-auto space-x-4 py-4 scrollbar-thin scrollbar-thumb-amber-700/50 scrollbar-track-amber-100/50">
          {reviews.map((review, index) => (
              <div
                  key={index}
                  className="flex-shrink-0 w-72 bg-white p-4 rounded-xl border border-gray-100 shadow-sm"
              >
                <div className="flex items-center justify-between mb-2">
                  <p className="font-semibold text-sm text-gray-800 truncate">
                    {review.client}
                  </p>
                  <div className="flex items-center">
                    {[...Array(5)].map((_, i) => (
                        <svg
                            key={i}
                            className={`w-4 h-4 ${
                                i < review.rating
                                    ? "text-yellow-400"
                                    : "text-gray-300"
                            }`}
                            fill="currentColor"
                            viewBox="0 0 20 20"
                        >
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                        </svg>
                    ))}
                  </div>
                </div>
                <p className="text-gray-600 text-sm line-clamp-2">
                  {review.comment}
                </p>
              </div>
          ))}
        </div>
      </div>
  );
};

interface ProductDetailPageProps {
  product: Product | null;
  error?: string;
}

async function getProductData(productId: string): Promise<Product | null> {
  const products: { [key: string]: Product } = {
    "knife-alpha": {
      id: "knife-alpha",
      name: "–ù—ñ–∂ –ú–∏—Å–ª–∏–≤—Å—å–∫–∏–π '–ê–ª—å—Ñ–∞'",
      description:
          "¬´–¢–∞–Ω—Ç–æ: –ü–∞—Ä–Ω—ñ –ù–æ–∂—ñ –¥–ª—è –í—ñ–¥–¥–∞–Ω–∏—Ö –ü—Ä–∏—Ö–∏–ª—å–Ω–∏–∫—ñ–≤ –¢–æ—á–Ω–æ—Å—Ç—ñ¬ª\n¬´–¢–∞–Ω—Ç–æ¬ª ‚Äî —Ü–µ –ø–∞—Ä–Ω—ñ –Ω–æ–∂—ñ, —Å—Ç–≤–æ—Ä–µ–Ω—ñ –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ —Ü—ñ–Ω—É—î —Ç–æ—á–Ω—ñ—Å—Ç—å, –º—ñ—Ü—å —ñ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —É –∫–æ–∂–Ω–æ–º—É —Ä—É—Å—ñ. –¶—è –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞ –ø–∞—Ä–∞ –Ω–æ–∂—ñ–≤ —Å—Ç–∞–Ω–µ —ñ–¥–µ–∞–ª—å–Ω–∏–º –≤–∏–±–æ—Ä–æ–º –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ —à—É–∫–∞—î –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –Ω–∞–¥—ñ–π–Ω—ñ—Å—Ç—å –≤ –µ–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∏—Ö —É–º–æ–≤–∞—Ö, –¥–µ –≤–∞–∂–ª–∏–≤–∞ –Ω–µ –ª–∏—à–µ —Å–∏–ª–∞, –∞ –π —Ç–æ—á–Ω—ñ—Å—Ç—å –∫–æ–∂–Ω–æ–≥–æ –¥—ñ—ó. –ó —ó—Ö–Ω—å–æ—é –¥–æ–ø–æ–º–æ–≥–æ—é –≤–∏ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ñ –¥–æ –±—É–¥—å-—è–∫–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤ –ø—Ä–∏—Ä–æ–¥–∏ –∞–±–æ –∑–∞–≤–¥–∞–Ω—å, —â–æ –≤–∏–º–∞–≥–∞—é—Ç—å –≤–µ–ª–∏–∫–æ—ó –∞–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—ñ —Ç–∞ –ø–æ—Ç—É–∂–Ω–æ—Å—Ç—ñ –æ–¥–Ω–æ—á–∞—Å–Ω–æ.\n\n–ö–æ–∂–µ–Ω –Ω—ñ–∂ —Ü—ñ—î—ó –ø–∞—Ä–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–π –≤—Ä—É—á–Ω—É –∑ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤, —â–æ –∑–∞–±–µ–∑–ø–µ—á—É—é—Ç—å —á—É–¥–æ–≤—É —Å—Ç—ñ–π–∫—ñ—Å—Ç—å –¥–æ –∑–Ω–æ—Å—É —Ç–∞ —Ç—Ä–∏–≤–∞–ª—É –≥–æ—Å—Ç—Ä–æ—Ç—É —Ä—ñ–∂—É—á–æ—ó –∫—Ä–æ–º–∫–∏. –õ–µ–∑–æ ¬´–¢–∞–Ω—Ç–æ¬ª –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è —Å–≤–æ—ó–º –∫–ª–∞—Å–∏—á–Ω–∏–º —Å—Ç–∏–ª–µ–º —ñ–∑ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–∏–º –∫—ñ–Ω—á–∏–∫–æ–º, —â–æ –¥–æ–∑–≤–æ–ª—è—î –π–æ–º—É –ø—Ä–æ–±–∏–≤–∞—Ç–∏ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ –∑ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—é –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—é. –ó–∞–≤–¥—è–∫–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å—É—á–∞—Å–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π, –∫–æ–∂–µ–Ω –Ω—ñ–∂ –Ω–∞–¥–∞—î –≤—ñ–¥—á—É—Ç—Ç—è —Ç–æ—á–Ω–æ—Å—Ç—ñ —Ç–∞ –∫–æ–Ω—Ç—Ä–æ–ª—é –ø—ñ–¥ —á–∞—Å –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è, —â–æ —Ä–æ–±–∏—Ç—å —ó—Ö —ñ–¥–µ–∞–ª—å–Ω–∏–º–∏ –¥–ª—è –º–∏—Å–ª–∏–≤—Ü—ñ–≤, –∫–æ–ª–µ–∫—Ü—ñ–æ–Ω–µ—Ä—ñ–≤ —á–∏ —Ç–∏—Ö, —Ö—Ç–æ –∑–∞–π–º–∞—î—Ç—å—Å—è —Ç–∞–∫—Ç–∏—á–Ω–∏–º–∏ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏.\n\n–ù–∞–¥–∑–≤–∏—á–∞–π–Ω–∞ —Ç–æ—á–Ω—ñ—Å—Ç—å —Ç–∞ —Å—Ç–∏–ª—å: –ó–∞–≤–¥—è–∫–∏ –¥–∏–∑–∞–π–Ω—É –ø–∞—Ä–Ω–∏—Ö –Ω–æ–∂—ñ–≤ ¬´–¢–∞–Ω—Ç–æ¬ª, –∫–æ–∂–µ–Ω –Ω—ñ–∂ –Ω–µ –ø—Ä–æ—Å—Ç–æ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∞ –≤–∏—Ç–≤—ñ—Ä –º–∏—Å—Ç–µ—Ü—Ç–≤–∞, –≤ —è–∫–æ–º—É –ø–æ—î–¥–Ω—É—é—Ç—å—Å—è —Ç—Ä–∞–¥–∏—Ü—ñ—ó —è–ø–æ–Ω—Å—å–∫–æ—ó –º–∞–π—Å—Ç–µ—Ä–Ω–æ—Å—Ç—ñ —ñ —Å—É—á–∞—Å–Ω—ñ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è. –ö–æ–∂–Ω–∞ –¥–µ—Ç–∞–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–∞ –∑ —É–≤–∞–≥–æ—é –¥–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ, –∑–∞–±–µ–∑–ø–µ—á—É—é—á–∏ –Ω–µ –ª–∏—à–µ –µ—Å—Ç–µ—Ç–∏—á–Ω—É –ø—Ä–∏–≤–∞–±–ª–∏–≤—ñ—Å—Ç—å, –∞–ª–µ –π –æ–ø—Ç–∏–º–∞–ª—å–Ω—É –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –ø—Ä–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ –≤ —Ä—ñ–∑–Ω–∏—Ö —É–º–æ–≤–∞—Ö.\n\n–ù–∞–¥—ñ–π–Ω—ñ—Å—Ç—å —É –∫–æ–∂–Ω–æ–º—É —Ä—É—Å—ñ: –ö–æ–∂–µ–Ω –Ω—ñ–∂ –º–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤—É –æ–±—Ä–æ–±–∫—É –ª–µ–∑–∞, —â–æ –∑–∞–±–µ–∑–ø–µ—á—É—î –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –≥–æ—Å—Ç—Ä–æ—Ç—É —ñ –∑–Ω–æ—Å–æ—Å—Ç—ñ–π–∫—ñ—Å—Ç—å. –†—É—á–Ω–µ –∑–∞—Ç–æ—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç—É—î, —â–æ –∫–æ–∂–µ–Ω –Ω—ñ–∂ –±—É–¥–µ –≤—ñ–¥–º—ñ–Ω–Ω–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –Ω–∞–≤—ñ—Ç—å –ø—ñ—Å–ª—è —Ç—Ä–∏–≤–∞–ª–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —Å–∫–ª–∞–¥–Ω–∏—Ö —É–º–æ–≤–∞—Ö. –í–∏ –º–æ–∂–µ—Ç–µ –ø–æ–∫–ª–∞—Å—Ç–∏—Å—è –Ω–∞ —Ü—é –ø–∞—Ä—É –Ω–æ–∂—ñ–≤, –∑–Ω–∞—é—á–∏, —â–æ –≤–æ–Ω–∏ –Ω–µ –ø—ñ–¥–≤–µ–¥—É—Ç—å —É –Ω–∞–π–≤–∞–∂—á—ñ –º–æ–º–µ–Ω—Ç–∏.\n\n–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π —Å—Ç–∏–ª—å —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å: –ó–∞–≤–¥—è–∫–∏ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó —á–µ—Ä–µ–∑ –ª–∞–∑–µ—Ä–Ω–µ –≥—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è, –∫–æ–∂–µ–Ω –∫–æ–º–ø–ª–µ–∫—Ç –Ω–æ–∂—ñ–≤ –º–æ–∂–Ω–∞ –∞–¥–∞–ø—Ç—É–≤–∞—Ç–∏ –ø—ñ–¥ –≤–∞—à—ñ —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—ñ –ø–æ–±–∞–∂–∞–Ω–Ω—è. –ë—É–¥—å-—Ç–æ —ñ–Ω—ñ—Ü—ñ–∞–ª–∏, –æ—Å–æ–±–ª–∏–≤–∏–π –º–∞–ª—é–Ω–æ–∫ —á–∏ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –Ω–∞–ø–∏—Å ‚Äî –≤–∞—à—ñ –Ω–æ–∂—ñ —Å—Ç–∞–Ω—É—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º–∏ –≤–∏—Ç–≤–æ—Ä–∞–º–∏, —â–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—é—Ç—å –≤–∞—à—É –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å.\n\n–ú—ñ—Ü–Ω—ñ –ø—ñ—Ö–≤–∏ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –Ω–æ—Å—ñ–Ω–Ω—è: –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –Ω–æ–∂–∞ –≤ –∫–æ–º–ø–ª–µ–∫—Ç—ñ –º–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –ø—ñ—Ö–≤–∏, –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω—ñ –∑ –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤, —â–æ –∑–∞–±–µ–∑–ø–µ—á—É—é—Ç—å –ª–µ–≥–∫—ñ—Å—Ç—å —Ç–∞ –Ω–∞–¥—ñ–π–Ω—ñ—Å—Ç—å –ø—Ä–∏ –Ω–æ—Å—ñ–Ω–Ω—ñ. –í–∏ –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –∫—Ä—ñ–ø–ª–µ–Ω–Ω—è ‚Äî –Ω–∞ –ø–æ—è—Å, —Å—Ç–µ–≥–Ω–æ —á–∏ —Å–∏—Å—Ç–µ–º—É MOLLE, —â–æ –≥–∞—Ä–∞–Ω—Ç—É—î –∑—Ä—É—á–Ω—ñ—Å—Ç—å —É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ.\n\n–¢–∞–Ω—Ç–æ: –ü–∞—Ä–Ω—ñ –ù–æ–∂—ñ –¥–ª—è –í—ñ–¥–¥–∞–Ω–∏—Ö –ü—Ä–∏—Ö–∏–ª—å–Ω–∏–∫—ñ–≤ –¢–æ—á–Ω–æ—Å—Ç—ñ ‚Äî —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏. –¶–µ –Ω–∞–¥—ñ–π–Ω—ñ —Å—É–ø—É—Ç–Ω–∏–∫–∏, —â–æ –ø–æ—î–¥–Ω—É—é—Ç—å —É —Å–æ–±—ñ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å, –µ–ª–µ–≥–∞–Ω—Ç–Ω–∏–π –¥–∏–∑–∞–π–Ω —ñ –≤–∏—Å–æ–∫—ñ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏ —è–∫–æ—Å—Ç—ñ. –û–±–∏—Ä–∞—é—á–∏ —Ü–µ–π –∫–æ–º–ø–ª–µ–∫—Ç, –≤–∏ –æ—Ç—Ä–∏–º—É—î—Ç–µ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —â–æ —Å—Ç–∞–Ω–µ –≤–∞—à–∏–º –Ω–∞–¥—ñ–π–Ω–∏–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º —É –±—É–¥—å-—è–∫–∏—Ö –ø—Ä–∏–≥–æ–¥–∞—Ö.\n\n–¶—ñ–Ω–∞: 9 340 –≥—Ä–Ω (–∑–∞ –¥–≤–∞ –Ω–æ–∂—ñ)\n\n–í–∫–ª—é—á–∞—î:\n\n–ù—ñ–∂ ¬´–¢–∞–Ω—Ç–æ¬ª (—Ç—Ä–∞–≤–ª–µ–Ω–Ω—è) ‚Äî 2 850 –≥—Ä–Ω\n–ì—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è –Ω–∞ –æ–±–æ—Ö —Å—Ç–æ—Ä–æ–Ω–∞—Ö –∫–ª–∏–Ω–∫–∞ ‚Äî 500 –≥—Ä–Ω\n–ü—ñ—Ö–≤–∏ ¬´–¢–∞–Ω—Ç–æ¬ª ‚Äî 750 –≥—Ä–Ω\n–ì—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è –Ω–∞ –ø—ñ—Ö–≤–∞—Ö ‚Äî 250 –≥—Ä–Ω\n–ö—Ä—ñ–ø–ª–µ–Ω–Ω—è MOLLE ‚Äî 320 –≥—Ä–Ω\n–†–∞–∑–æ–º (–∑–∞ –¥–≤–∞ –Ω–æ–∂—ñ): 9 340 –≥—Ä–Ω",
      price: 129.99,
      image_url: "/knives/8.jpg",
      bladeLength: 15,
      bladeWidth: 30,
      bladeWeight: 180,
      totalLength: 28,
      sharpnessAngle: 20,
      hardnessRockwell: 58,
      sheathColor: "–ß–æ—Ä–Ω–∏–π",
      bladeCoatingColor: "–ú–∞—Ç–æ–≤–∏–π —Å—ñ—Ä–∏–π",
      handleColor: "–î–µ—Ä–µ–≤–æ (–≥–æ—Ä—ñ—Ö)",
      engravingNames: ["–õ–æ–≥–æ—Ç–∏–ø –≤–∏—Ä–æ–±–Ω–∏–∫–∞", "–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –Ω–∞–ø–∏—Å"],
      bladeCoatingType: "–¢–µ—Ñ–ª–æ–Ω–æ–≤–µ",
      category: "–ù–æ–∂—ñ",
      reviews: [
        {
          comment: "test",
          rating: 1,
          client: "user@example.com",
        },
        {
          comment: "test",
          rating: 1,
          client: "user@example.com"
        },
        {
          comment: "test",
          rating: 1,
          client: "user@example.com"
        },
        {
          comment: "test",
          rating: 1,
          client: "user@example.com"
        },
        {
          comment: "test",
          rating: 1,
          client: "user@example.com"
        },
        {
          comment: "test",
          rating: 1,
          client: "user@example.com"
        },
        {
          comment: "test",
          rating: 1,
          client: "user@example.com"
        },
      ],
      averageRating: 1,
    },
    "knife-beta": {
      id: "knife-beta",
      name: "–¢–∞–∫—Ç–∏—á–Ω–∏–π –ù—ñ–∂ '–ë–µ—Ç–∞'",
      description:
          "–ö–æ–º–ø–∞–∫—Ç–Ω–∏–π —Ç–∞ —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π —Ç–∞–∫—Ç–∏—á–Ω–∏–π –Ω—ñ–∂. –Ü–¥–µ–∞–ª—å–Ω–æ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ç–∞ –µ–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∏—Ö —É–º–æ–≤.",
      price: 89.5,
      image_url: "/knives/8.jpg",
      bladeLength: 10,
      bladeWidth: 25,
      bladeWeight: 120,
      totalLength: 22,
      sharpnessAngle: 22,
      hardnessRockwell: 60,
      sheathColor: "–û–ª–∏–≤–∞",
      bladeCoatingColor: "–ß–æ—Ä–Ω–∏–π –∞–Ω—Ç–∏–≤—ñ–¥–±–ª–∏—Å–∫",
      handleColor: "G10 –ß–æ—Ä–Ω–∏–π",
      bladeCoatingType: "–ü–æ—Ä–æ—à–∫–æ–≤–µ",
      category: "–ù–æ–∂—ñ",
    },
    "accessory-sharpener": {
      id: "accessory-sharpener",
      name: "–¢–æ—á–∏–ª–∫–∞ –¥–ª—è –Ω–æ–∂—ñ–≤ '–ü—Ä–æ—Ñ—ñ'",
      description:
          "–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ —Ç–æ—á–∏–ª–∫–∞ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —ñ–¥–µ–∞–ª—å–Ω–æ—ó –≥–æ—Å—Ç—Ä–æ—Ç–∏ –≤–∞—à–∏—Ö –Ω–æ–∂—ñ–≤. –ü—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ª–µ–∑.",
      price: 25.0,
      image_url: "/knives/8.jpg",
      category: "–ê–∫—Å–µ—Å—É–∞—Ä–∏",
    },
  };
  return new Promise((resolve) => {
    setTimeout(() => {
      resolve(products[productId] || null);
    }, 500);
  });
}

export const getServerSideProps: GetServerSideProps<
    ProductDetailPageProps
> = async (context) => {
  const { productId } = context.params as { productId: string };

  if (!productId) {
    return { notFound: true };
  }

  try {
    const product = await getProductData(productId);

    if (!product) {
      return { notFound: true };
    }

    return {
      props: {
        product,
      },
    };
  } catch (error) {
    console.error("Failed to fetch product:", error);
    return { props: { product: null, error: "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–æ–≤–∞—Ä." } };
  }
};

const ProductDetailPage: NextPage<ProductDetailPageProps> = ({
                                                               product,
                                                               error,
                                                             }) => {
  const router = useRouter();

  if (router.isFallback || (!product && !error)) {
    return (
        <div className="min-h-screen bg-gradient-to-br from-amber-50 via-orange-50 to-yellow-50 flex items-center justify-center">
          <div className="text-center space-y-4">
            <div className="relative">
              <div className="w-16 h-16 mx-auto border-4 border-amber-200 border-t-amber-600 rounded-full animate-spin"></div>
              <div className="absolute inset-0 w-16 h-16 mx-auto border-4 border-transparent border-t-orange-400 rounded-full animate-spin animate-reverse"></div>
            </div>
            <p className="text-xl text-gray-700 font-medium">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
            <p className="text-sm text-gray-500">
              –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–æ–≤–∞—Ä
            </p>
          </div>
        </div>
    );
  }

  if (error) {
    return (
        <div className="min-h-screen bg-gradient-to-br from-red-50 via-orange-50 to-yellow-50 flex flex-col items-center justify-center text-center px-4">
          <Head>
            <title>–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É</title>
          </Head>
          <div className="bg-white/80 backdrop-blur-sm rounded-3xl shadow-xl p-8 max-w-md w-full border border-red-100">
            <div className="text-6xl mb-4">üòû</div>
            <h2 className="text-3xl font-bold mb-4 text-gray-800">
              –û–π, —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞!
            </h2>
            <p className="mb-6 text-lg text-gray-600">{error}</p>
            <Link href="/products" passHref legacyBehavior>
              <a className="inline-flex items-center px-6 py-3 rounded-2xl font-semibold bg-gradient-to-r from-amber-600 to-orange-600 text-white hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300">
                <svg
                    className="w-5 h-5 mr-2"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                >
                  <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M10 19l-7-7m0 0l7-7m-7 7h18"
                  />
                </svg>
                –î–æ –≤—Å—ñ—Ö —Ç–æ–≤–∞—Ä—ñ–≤
              </a>
            </Link>
          </div>
        </div>
    );
  }

  if (!product) {
    return (
        <div className="min-h-screen bg-gradient-to-br from-amber-50 via-orange-50 to-yellow-50 flex items-center justify-center">
          <Head>
            <title>–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</title>
          </Head>
          <div className="text-center">
            <div className="text-6xl mb-4">üîç</div>
            <p className="text-xl text-gray-700">–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>
          </div>
        </div>
    );
  }

  const pageTitle = `${product.name} | –î–µ—Ç–∞–ª—ñ —Ç–æ–≤–∞—Ä—É`;
  const pageDescription = product.description.substring(0, 160);
  const keywords = [
    product.category || "—Ç–æ–≤–∞—Ä",
    product.name,
    "–∫—É–ø–∏—Ç–∏",
    "–¥–µ—Ç–∞–ª—ñ",
  ]
      .concat(product.name.split(" "))
      .join(", ");
  const domain =
      typeof window !== "undefined"
          ? window.location.origin
          : "https://yourdomain.com";
  const ogImageUrl = product.image_url.startsWith("http")
      ? product.image_url
      : `${domain}${product.image_url}`;

  return (
      <div className="min-h-screen bg-gradient-to-br from-amber-50 via-orange-50 to-yellow-50 relative overflow-hidden">
        <div className="absolute inset-0 overflow-hidden pointer-events-none">
          <div className="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-amber-200/30 to-orange-200/30 rounded-full blur-3xl"></div>
          <div className="absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-br from-yellow-200/30 to-amber-200/30 rounded-full blur-3xl"></div>
        </div>

        <Head>
          <title>{pageTitle}</title>
          <meta name="description" content={pageDescription} />
          <meta name="keywords" content={keywords} />
          <meta property="og:title" content={product.name} />
          <meta
              property="og:description"
              content={product.description.substring(0, 100)}
          />
          <meta property="og:type" content="product" />
          <meta property="og:image" content={ogImageUrl} />
          <meta property="og:image:width" content="800" />
          <meta property="og:image:height" content="600" />
          <meta property="og:url" content={`${domain}${router.asPath}`} />
          <meta name="twitter:card" content="summary_large_image" />
          <meta name="twitter:title" content={product.name} />
          <meta name="twitter:description" content={pageDescription} />
          <meta name="twitter:image" content={ogImageUrl} />
          <script
              type="application/ld+json"
              dangerouslySetInnerHTML={{
                __html: JSON.stringify({
                  "@context": "https://schema.org/",
                  "@type": "Product",
                  name: product.name,
                  image: ogImageUrl,
                  description: product.description,
                  sku: product.id,
                  offers: {
                    "@type": "Offer",
                    url: `${domain}${router.asPath}`,
                    priceCurrency: "UAH",
                    price: product.price.toFixed(2),
                    availability:
                        product.stock && product.stock > 0
                            ? "https://schema.org/InStock"
                            : "https://schema.org/OutOfStock",
                    itemCondition: "https://schema.org/NewCondition",
                  },
                }),
              }}
          />
        </Head>

        <main className="relative z-10 container mx-auto px-4 py-8 md:py-16">
          <div className="flex flex-col md:flex-row -mx-4 mb-12">
            <ProductImage src={product.image_url} alt={product.name} />
            <ProductInfo
                name={product.name}
                description={product.description}
                price={product.price}
                productId={product.id}
                reviews={product.reviews}
                averageRating={product.averageRating}
            />
          </div>
          <ProductSpecs product={product} />
        </main>
      </div>
  );
};

export default ProductDetailPage;